class Solution {
    public int kthSmallest(TreeNode root, int k) {
        inorder(root, k);
        return ans;
    }
    int i=0;
    int ans=0;
    public void inorder(TreeNode node, int k){
        if(node==null){
            return;
        }
        inorder(node.left, k);
        i++;
        if(i==k){
            ans=node.val;
            return;
        }
        inorder(node.right, k);
    }
}

//do the inorder traversal of the binary tree
    //root[0] = root node
    //root[i] = root->left -- if it is null then there is no left node for the root node
    //root[i+1] = root->right -- if it is null then there is no right node for the root   node 
    //the next should start from the i=2
    //successively it will be the left of that node and continues
