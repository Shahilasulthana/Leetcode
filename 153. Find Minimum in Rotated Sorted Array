class Solution {
    public int findMin(int[] nums) {
        int start = 0;
        int end = nums.length - 1;
        while(start < end){
            int mid = start + (end - start) /2;
            if(nums[mid] > nums[end]){
                start = mid + 1;
            }
            else{
                end = mid;
            }
        
        }
        return nums[start];
    }
}



- Here we are using Binary search
- If the mid element is greater than the end element then the minimum is present at the right half of the rotated sorted array
- if not then we have to make the mid element as the end and find in the left rotated sorted array
