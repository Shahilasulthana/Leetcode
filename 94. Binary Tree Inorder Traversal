/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<Integer> inorderTraversal(TreeNode root) {
        // Inorder traversal => Leftchild -> parent -> right child
        List<Integer> result = new ArrayList<>();
        if(TreeNode.left != null){
            left_child = TreeNode.left;
        }
        
        parent = TreeNode.val;
        right_child = TreeNode.right;

       return result.add(left_child, parent, right_child) ;
        
    }
}
