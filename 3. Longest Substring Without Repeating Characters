class Solution:
    def lengthOfLongestSubstring(self, s: str) -> int:
        char_set = set()
        left = 0
        max_length = 0

        for right in range(len(s)):
            while s[right] in char_set:
                char_set.remove(s[left])
                left += 1

            char_set.add(s[right])
            max_length = max(max_length, right - left + 1)

        return max_length

# Here we have used sliding window approach where the left is the start of the window and when we find any repeating characters coming inside the window then we are reducing the window size by 1 to avoid the repetition of characters where


